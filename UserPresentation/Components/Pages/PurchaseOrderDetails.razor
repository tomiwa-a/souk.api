@page "/purchase-orders/{id:int}"
@using Souk.Application.DTOs
@using UserPresentation.Services
@inject ApiPurchaseOrderService PurchaseOrderService

<PageTitle>Purchase Order Details</PageTitle>

@if (order == null)
{
    <p>Loading...</p>
}
else
{
    <h1>Purchase Order @order.Id</h1>

    <div class="card">
        <div class="card-body">
            <h5 class="card-title">Details</h5>
            <p class="card-text"><strong>ID:</strong> @order.Id</p>
            <p class="card-text"><strong>Product ID:</strong> @order.ProductId</p>
            <p class="card-text"><strong>Supplier ID:</strong> @order.SupplierId</p>
            <p class="card-text"><strong>Warehouse ID:</strong> @order.WarehouseId</p>
            <p class="card-text"><strong>Quantity:</strong> @order.Quantity</p>
            <p class="card-text"><strong>Ordered At:</strong> @order.OrderedAt</p>
            <p class="card-text"><strong>Expected Arrival:</strong> @order.ExpectedArrivalDate</p>
        </div>
    </div>

    <NavLink href="purchase-orders" class="btn btn-primary mt-3">Back to Purchase Orders</NavLink>
}

@code {
    [Parameter]
    public int Id { get; set; }

    private PurchaseOrderDto? order;

    protected override async Task OnInitializedAsync()
    {
        order = await PurchaseOrderService.GetPurchaseOrderAsync(Id);
    }
}